{
  "contractName": "DeXswap",
  "abi": [
    {
      "inputs": [],
      "name": "DXCToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "dxcOwner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dxcAmount",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DXCToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dxcOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dxcAmount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Laxman Rai\",\"methods\":{},\"stateVariables\":{\"DXCToken\":{\"details\":\"DXCToken is manually passed during the development\"},\"dxcOwner\":{\"details\":\"dxcOwner address is from the contract creator\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/sangy/Documents/DeXSwap/contracts/DeXswap.sol\":\"DeXswap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/sangy/Documents/DeXSwap/contracts/DeXswap.sol\":{\"keccak256\":\"0xeebc1e2770c7e8cb51e9853d51328b077dc5c0738bd9dcad500ef02601da51af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5de23d996312ed34aa6ebc0b042bd39a61849a93205bfb4ed2149f4894f62f73\",\"dweb:/ipfs/QmUVUMprc2EGE8oAPzCXnR5h5ZFHCZg9CpjsyFBtMUiCgA\"]},\"/C/Users/sangy/Documents/DeXSwap/contracts/IERC20.sol\":{\"keccak256\":\"0x1cf8c1e1a8a8f60671d426bcedba75f5f0509dc74789e2d2475791c0596c33d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687bcf000696228ec0ab4f0a4a694c5d66386a03e3accb981882e44c267ecc2a\",\"dweb:/ipfs/QmbbfbCnBKTiqC1avw89kfA3wx8nmJWAWL7AAdu2p8DrHp\"]}},\"version\":1}",
  "bytecode": "0x6080604052600080546001600160a01b031990811673a42eec7ba2d195d923840adb68819edbe93459ec17909155600180549091167378d2dec555571eeb49714300cd3e6f7cade3928417905534801561005857600080fd5b50610206806100686000396000f3fe6080604052600436106100345760003560e01c80637388c0861461003957806394b918de1461006a578063b60ce43614610089575b600080fd5b34801561004557600080fd5b5061004e61009e565b604080516001600160a01b039092168252519081900360200190f35b6100876004803603602081101561008057600080fd5b50356100ad565b005b34801561009557600080fd5b5061004e6101c1565b6000546001600160a01b031681565b6001546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156100e6573d6000803e3d6000fd5b5060008054600154604080516323b872dd60e01b81526001600160a01b03928316600482015233602482015260448101869052905191909216916323b872dd91606480830192602092919082900301818787803b15801561014657600080fd5b505af115801561015a573d6000803e3d6000fd5b505050506040513d602081101561017057600080fd5b50519050806101bd576040805162461bcd60e51b8152602060048201526014602482015273445843205472616e73666572206661696c65642160601b604482015290519081900360640190fd5b5050565b6001546001600160a01b03168156fea26469706673582212207b80edc56c07bcbf3108940786f347e0f1f9f3315b70fd8faedbc6c3d7bc6af064736f6c634300060a0033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c80637388c0861461003957806394b918de1461006a578063b60ce43614610089575b600080fd5b34801561004557600080fd5b5061004e61009e565b604080516001600160a01b039092168252519081900360200190f35b6100876004803603602081101561008057600080fd5b50356100ad565b005b34801561009557600080fd5b5061004e6101c1565b6000546001600160a01b031681565b6001546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156100e6573d6000803e3d6000fd5b5060008054600154604080516323b872dd60e01b81526001600160a01b03928316600482015233602482015260448101869052905191909216916323b872dd91606480830192602092919082900301818787803b15801561014657600080fd5b505af115801561015a573d6000803e3d6000fd5b505050506040513d602081101561017057600080fd5b50519050806101bd576040805162461bcd60e51b8152602060048201526014602482015273445843205472616e73666572206661696c65642160601b604482015290519081900360640190fd5b5050565b6001546001600160a01b03168156fea26469706673582212207b80edc56c07bcbf3108940786f347e0f1f9f3315b70fd8faedbc6c3d7bc6af064736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "111:616:0:-:0;;;199:75;;;-1:-1:-1;;;;;;199:75:0;;;231:42;199:75;;;;;341:76;;;;;375:42;341:76;;;111:616;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "111:616:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:75;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;199:75:0;;;;;;;;;;;;;;430:294;;;;;;;;;;;;;;;;-1:-1:-1;430:294:0;;:::i;:::-;;341:76;;;;;;;;;;;;;:::i;199:75::-;;;-1:-1:-1;;;;;199:75:0;;:::o;430:294::-;546:8;;:28;;-1:-1:-1;;;;;546:8:0;;;;564:9;546:28;;;;;:8;:28;:8;:28;564:9;546:8;:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:12:0;610:8;;;632;610:55;;;-1:-1:-1;;;610:55:0;;-1:-1:-1;;;;;632:8:0;;;610:55;;;;642:10;610:55;;;;;;;;;;;;:8;;;;;:21;;:55;;;;;;;;;;;;;;595:12;610:8;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;610:55:0;;-1:-1:-1;610:55:0;676:40;;;;;-1:-1:-1;;;676:40:0;;;;;;;;;;;;-1:-1:-1;;;676:40:0;;;;;;;;;;;;;;;430:294;;:::o;341:76::-;;;-1:-1:-1;;;;;341:76:0;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.10;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/// @author Laxman Rai\r\ncontract DeXswap{\r\n    /// @dev DXCToken is manually passed during the development\r\n    IERC20 public DXCToken = IERC20(0xa42eEC7BA2D195D923840aDB68819eDbE93459ec);\r\n    /// @dev dxcOwner address is from the contract creator\r\n    address payable public dxcOwner = 0x78D2DEc555571Eeb49714300cD3E6f7cAde39284;\r\n    \r\n    function swap(uint256 _dxcAmount) payable public {\r\n        /// @dev first transfer the amount to dxcOwner\r\n        dxcOwner.transfer(msg.value);\r\n        \r\n        bool dxcSent = DXCToken.transferFrom(dxcOwner, msg.sender, _dxcAmount);\r\n        require(dxcSent, \"DXC Transfer failed!\");\r\n    }\r\n}",
  "sourcePath": "C:/Users/sangy/Documents/DeXSwap/contracts/DeXswap.sol",
  "ast": {
    "absolutePath": "/C/Users/sangy/Documents/DeXSwap/contracts/DeXswap.sol",
    "exportedSymbols": {
      "DeXswap": [
        42
      ]
    },
    "id": 43,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "/C/Users/sangy/Documents/DeXSwap/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 121,
        "src": "61:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "87:24:0",
          "text": "@author Laxman Rai"
        },
        "fullyImplemented": true,
        "id": 42,
        "linearizedBaseContracts": [
          42
        ],
        "name": "DeXswap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4,
              "nodeType": "StructuredDocumentation",
              "src": "134:59:0",
              "text": "@dev DXCToken is manually passed during the development"
            },
            "functionSelector": "7388c086",
            "id": 9,
            "mutability": "mutable",
            "name": "DXCToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 42,
            "src": "199:75:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$120",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 5,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 120,
              "src": "199:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$120",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307861343265454337424132443139354439323338343061444236383831396544624539333435396563",
                  "id": 7,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "231:42:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xa42eEC7BA2D195D923840aDB68819eDbE93459ec"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 6,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 120,
                "src": "224:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$120_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "224:50:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$120",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10,
              "nodeType": "StructuredDocumentation",
              "src": "281:54:0",
              "text": "@dev dxcOwner address is from the contract creator"
            },
            "functionSelector": "b60ce436",
            "id": 13,
            "mutability": "mutable",
            "name": "dxcOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 42,
            "src": "341:76:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "341:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307837384432444563353535353731456562343937313433303063443345366637634164653339323834",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "375:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x78D2DEc555571Eeb49714300cD3E6f7cAde39284"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "479:245:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "564:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "564:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18,
                        "name": "dxcOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "546:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "546:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "546:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "546:28:0"
                },
                {
                  "assignments": [
                    26
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26,
                      "mutability": "mutable",
                      "name": "dxcSent",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 40,
                      "src": "595:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "595:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "dxcOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "632:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "642:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "642:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "_dxcAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "654:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 27,
                        "name": "DXCToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "610:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$120",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101,
                      "src": "610:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "595:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "dxcSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "684:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "445843205472616e73666572206661696c656421",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "693:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bec4bfb151909582ac87dec601980fc765639c570dd03befd69ff02e1a719d3",
                          "typeString": "literal_string \"DXC Transfer failed!\""
                        },
                        "value": "DXC Transfer failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bec4bfb151909582ac87dec601980fc765639c570dd03befd69ff02e1a719d3",
                          "typeString": "literal_string \"DXC Transfer failed!\""
                        }
                      ],
                      "id": 35,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "676:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "676:40:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "94b918de",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_dxcAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "444:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "443:20:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:0"
            },
            "scope": 42,
            "src": "430:294:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 43,
        "src": "111:616:0"
      }
    ],
    "src": "33:694:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/sangy/Documents/DeXSwap/contracts/DeXswap.sol",
    "exportedSymbols": {
      "DeXswap": [
        42
      ]
    },
    "id": 43,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "/C/Users/sangy/Documents/DeXSwap/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 43,
        "sourceUnit": 121,
        "src": "61:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "87:24:0",
          "text": "@author Laxman Rai"
        },
        "fullyImplemented": true,
        "id": 42,
        "linearizedBaseContracts": [
          42
        ],
        "name": "DeXswap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4,
              "nodeType": "StructuredDocumentation",
              "src": "134:59:0",
              "text": "@dev DXCToken is manually passed during the development"
            },
            "functionSelector": "7388c086",
            "id": 9,
            "mutability": "mutable",
            "name": "DXCToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 42,
            "src": "199:75:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$120",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 5,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 120,
              "src": "199:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$120",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307861343265454337424132443139354439323338343061444236383831396544624539333435396563",
                  "id": 7,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "231:42:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xa42eEC7BA2D195D923840aDB68819eDbE93459ec"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 6,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 120,
                "src": "224:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$120_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "224:50:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$120",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10,
              "nodeType": "StructuredDocumentation",
              "src": "281:54:0",
              "text": "@dev dxcOwner address is from the contract creator"
            },
            "functionSelector": "b60ce436",
            "id": 13,
            "mutability": "mutable",
            "name": "dxcOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 42,
            "src": "341:76:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "341:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307837384432444563353535353731456562343937313433303063443345366637634164653339323834",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "375:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x78D2DEc555571Eeb49714300cD3E6f7cAde39284"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "479:245:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "564:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "564:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18,
                        "name": "dxcOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "546:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "546:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "546:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "546:28:0"
                },
                {
                  "assignments": [
                    26
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26,
                      "mutability": "mutable",
                      "name": "dxcSent",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 40,
                      "src": "595:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "595:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 34,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "dxcOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "632:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "642:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "642:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "_dxcAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "654:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 27,
                        "name": "DXCToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "610:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$120",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 101,
                      "src": "610:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "595:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "dxcSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "684:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "445843205472616e73666572206661696c656421",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "693:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bec4bfb151909582ac87dec601980fc765639c570dd03befd69ff02e1a719d3",
                          "typeString": "literal_string \"DXC Transfer failed!\""
                        },
                        "value": "DXC Transfer failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bec4bfb151909582ac87dec601980fc765639c570dd03befd69ff02e1a719d3",
                          "typeString": "literal_string \"DXC Transfer failed!\""
                        }
                      ],
                      "id": 35,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "676:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "676:40:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "94b918de",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_dxcAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "444:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "443:20:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:0"
            },
            "scope": 42,
            "src": "430:294:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 43,
        "src": "111:616:0"
      }
    ],
    "src": "33:694:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0xB38fb6AAf40289F3D2F7A2e69B654b91D2afFC4f",
      "transactionHash": "0xb02d1290abc94eb904744507b181635484d608017d3b3a8bef9ba98ceccf8d34"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-11-26T16:31:38.237Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Laxman Rai",
    "methods": {},
    "stateVariables": {
      "DXCToken": {
        "details": "DXCToken is manually passed during the development"
      },
      "dxcOwner": {
        "details": "dxcOwner address is from the contract creator"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}